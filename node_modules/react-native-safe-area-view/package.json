{
  "_args": [
    [
      {
        "raw": "react-native-safe-area-view@^0.14.1",
        "scope": null,
        "escapedName": "react-native-safe-area-view",
        "name": "react-native-safe-area-view",
        "rawSpec": "^0.14.1",
        "spec": ">=0.14.1 <0.15.0",
        "type": "range"
      },
      "J:\\ReactNativeMovieApp\\node_modules\\@react-navigation\\native"
    ]
  ],
  "_from": "react-native-safe-area-view@^0.14.1",
  "_hasShrinkwrap": false,
  "_id": "react-native-safe-area-view@0.14.8",
  "_location": "/react-native-safe-area-view",
  "_nodeVersion": "12.3.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-safe-area-view_0.14.8_1567797701267_0.7728721099492406"
  },
  "_npmUser": {
    "name": "brentvatne",
    "email": "brentvatne@gmail.com"
  },
  "_npmVersion": "6.11.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-safe-area-view@^0.14.1",
    "scope": null,
    "escapedName": "react-native-safe-area-view",
    "name": "react-native-safe-area-view",
    "rawSpec": "^0.14.1",
    "spec": ">=0.14.1 <0.15.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@react-navigation/native"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-safe-area-view/-/react-native-safe-area-view-0.14.8.tgz",
  "_shasum": "ef33c46ff8164ae77acad48c3039ec9c34873e5b",
  "_shrinkwrap": null,
  "_spec": "react-native-safe-area-view@^0.14.1",
  "_where": "J:\\ReactNativeMovieApp\\node_modules\\@react-navigation\\native",
  "author": {
    "name": "Dave Pack",
    "url": "dpack3.0@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/react-community/react-native-safe-area-view/issues"
  },
  "dependencies": {
    "hoist-non-react-statics": "^2.3.1"
  },
  "description": "JS only version of SafeAreaView for supporting iPhone X safe area insets.",
  "devDependencies": {
    "react": "16.2.0",
    "react-native": "^0.52.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-MtRSIcZNstxv87Jet+UsPhEd1tpGe8cVskDXlP657x6rHpSrbrc+y13ZNXrwAgGNNhqQNX7UJT68ZIq//ZRmvw==",
    "shasum": "ef33c46ff8164ae77acad48c3039ec9c34873e5b",
    "tarball": "https://registry.npmjs.org/react-native-safe-area-view/-/react-native-safe-area-view-0.14.8.tgz",
    "fileCount": 8,
    "unpackedSize": 16556,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdcrHGCRA9TVsSAnZWagAA97kP/1wGzmWel29JFeiDVWc6\nvDhUKEP1t38X5SwZsNo7u0SnQzD/AXpd+8XDQElneIMliHb8p57Ry4pG2UPi\nd4m5s06z/Swk/keRr87k0Bizn5rO1wMAzqGJbdoyjLkh5mcaoGtSEnmFl0Hl\n9f4O9tRouxZKQb/r1jbO563BT7Lk8uQMhAW9ERKu+DxcY7X/DPy1WxtoH8E9\n6nMY0oeSnNVzMEx8MxJAbttbvCtnLcDTQEFRnY10aDg7SF2mg/OlADlr5l7T\nWTcqkda1y8o0kfBhgdJ8SbChL7kX5N3hPhPZeYyf6ySD/MTQT9mjWkbkpP5f\nrJdGa8FsG7Nfqoz30K4lkl604qHaT1LjC0UeHhiIjs2eMeIT0TlY/W6gptdE\nW2K1GArH85H1OoQVJ0ZR5aZ74WCvWWTt752wDwYDBbb8A3FP2r8e+230E+aa\ndU1K4h54Tsn5G9lFEMdYc1lTIQAPm3Do4/jaz+ieD6CqrT0fNVFICtYvLCoG\nAa3fPsfWn52zS8bF3d1zCrU5iJxU7R5RtEmXH+v3+xvTIYS/sX3fgPXCqojr\nb1EGlcmRI9jACSFpdsqDW6xmY8ZE0/xP3wCMHlHgYdWiS3ZqjaCo/xg3hG/i\n2ntq8DQnqkHcb77epwQoUXoFFvcKs1ozyoTnZHEo9MJTaWW8Vvm9jfg4NDIo\nnMEl\r\n=feCb\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.d.ts",
    "index.js",
    "index.js.flow",
    "index.web.js",
    "withOrientation.js",
    "LICENSE"
  ],
  "gitHead": "6bf68f1484979e8dbd458332295a58c7199eb432",
  "homepage": "https://github.com/react-community/react-native-safe-area-view#readme",
  "keywords": [
    "react-native",
    "iPhoneX",
    "SafeAreaView"
  ],
  "license": "MIT",
  "main": "index",
  "maintainers": [
    {
      "name": "brentvatne",
      "email": "brentvatne@gmail.com"
    },
    {
      "name": "davepack",
      "email": "davepack@icloud.com"
    },
    {
      "name": "satya164",
      "email": "satyajit.happy@gmail.com"
    }
  ],
  "name": "react-native-safe-area-view",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "*",
    "react-native": "*"
  },
  "readme": "# react-native-safe-area-view\n\nThis is a JS-only version of React Native's SafeAreaView, it adds a small api that makes SafeAreaView more flexible for complex UIs.\n\n## Installation\n\n```\nnpm install react-native-safe-area-view\n```\n\n## Usage\n\nWrap components that touch any edge of the screen with SafeAreaView.\n\n```jsx\n<SafeAreaView>\n  <View>\n    <Text>Look, I'm safe!</Text>\n  </View>\n</SafeAreaView>\n```\n\nGet height of a specific side from the SafeArea.\n\n```jsx\n...\nconst { width, height } = Dimensions.get('window');\nimport { getInset } from 'react-native-safe-area-view';\n\nconst landScape = width > height;\nconst bottomPadding = getInset('bottom', landScape);\n```\n\n### forceInset\n\nSometimes you will observe unexpected behavior and jank because SafeAreaView uses `onLayout` then calls `measureInWindow` on the view. If you know your view will touch certain edges, use `forceInset` to force it to apply the inset padding on the view.\n\n```jsx\n<SafeAreaView forceInset={{ top: 'always' }}>\n  <View>\n    <Text>Yeah, I'm safe too!</Text>\n  </View>\n</SafeAreaView>\n```\n\n`forceInset` takes an object with the keys `top | bottom | left | right | vertical | horizontal` and the values `'always' | 'never'`. Or you can override the padding altogether by passing an integer.\n\n### With HOC\n\nSometimes you would prefer to use a higher-order component to wrap components.\n\n```js\nwithSafeArea()(Component);\n\n// Or with forceInset props\nwithSafeArea({ top: 'always' })(Component);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+ssh://git@github.com/react-community/react-native-safe-area-view.git",
    "type": "git"
  },
  "scripts": {
    "test": "test"
  },
  "version": "0.14.8"
}
