{
  "_args": [
    [
      {
        "raw": "regexpu-core@^4.6.0",
        "scope": null,
        "escapedName": "regexpu-core",
        "name": "regexpu-core",
        "rawSpec": "^4.6.0",
        "spec": ">=4.6.0 <5.0.0",
        "type": "range"
      },
      "J:\\ReactNativeMovieApp\\RNMovieApp\\node_modules\\@babel\\helper-create-regexp-features-plugin"
    ]
  ],
  "_from": "regexpu-core@^4.6.0",
  "_hasShrinkwrap": false,
  "_id": "regexpu-core@4.6.0",
  "_location": "/regexpu-core",
  "_nodeVersion": "12.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/regexpu-core_4.6.0_1568374934836_0.38375614757696574"
  },
  "_npmUser": {
    "name": "mathias",
    "email": "mathias@qiwi.be"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "regexpu-core@^4.6.0",
    "scope": null,
    "escapedName": "regexpu-core",
    "name": "regexpu-core",
    "rawSpec": "^4.6.0",
    "spec": ">=4.6.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@babel/helper-create-regexp-features-plugin"
  ],
  "_resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-4.6.0.tgz",
  "_shasum": "2037c18b327cfce8a6fea2a4ec441f2432afb8b6",
  "_shrinkwrap": null,
  "_spec": "regexpu-core@^4.6.0",
  "_where": "J:\\ReactNativeMovieApp\\RNMovieApp\\node_modules\\@babel\\helper-create-regexp-features-plugin",
  "author": {
    "name": "Mathias Bynens",
    "url": "https://mathiasbynens.be/"
  },
  "bugs": {
    "url": "https://github.com/mathiasbynens/regexpu-core/issues"
  },
  "dependencies": {
    "regenerate": "^1.4.0",
    "regenerate-unicode-properties": "^8.1.0",
    "regjsgen": "^0.5.0",
    "regjsparser": "^0.6.0",
    "unicode-match-property-ecmascript": "^1.0.4",
    "unicode-match-property-value-ecmascript": "^1.1.0"
  },
  "description": "regexpu’s core functionality (i.e. `rewritePattern(pattern, flag)`), capable of translating ES6 Unicode regular expressions to ES5.",
  "devDependencies": {
    "codecov": "^3.5.0",
    "istanbul": "^0.4.5",
    "jsesc": "^2.5.2",
    "lodash": "^4.17.15",
    "mocha": "^6.2.0",
    "regexpu-fixtures": "^2.1.3",
    "unicode-12.1.0": "^0.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-YlVaefl8P5BnFYOITTNzDvan1ulLOiXJzCNZxduTIosN17b87h3bvG9yHMoHaRuo88H4mQ06Aodj5VtYGGGiTg==",
    "shasum": "2037c18b327cfce8a6fea2a4ec441f2432afb8b6",
    "tarball": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-4.6.0.tgz",
    "fileCount": 6,
    "unpackedSize": 37502,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJde4CXCRA9TVsSAnZWagAAvvIP/3gcvaYTBW66Gj7VYrux\nbvncUe7t4si+gnZ4w7prA4qjfB/ulDteVBY4B0A+NBXAqMHWqHPJWe9GGh7p\n+Faj4l6RrWzRThEYcpZddLJuBtog87svSMKvzKKMKWTCTIqXsNXhLrXToYqg\nGH2LRpyIYQv9BRJeXuuKDx5enCqJtqNiRwmES0oaKv+9ew2cNynhU2opNpUL\nrS5jA0IsFfd7oDevEkN0iKpC+wbkd9mEf8++TFuYSj3m1jHiv3gmGiRg9VHf\nrfhnHx4YFYaLjIDfbcbibk784hngdpWoTMc7SYxTLGTImspoRW6LgEmmxu1A\n3F1JisOmseO9kVipLuI16axA7Gn7BIRPaTWZYFF9dNvMzdn383E47M7OX+Sv\n/mDU+e/s4ffl/ZNLHMy2neUCqSMESmHR9Le0McPKyaHpN7jFc6cWpMKz0H6M\ntGEb6rEik7+KYX5NP9UJLpawojHP4c3ZeuDNPZmrTeX6FSavpZHTGKQTKFr+\nsJtiFsX8y/vpBmf6H69jWklOxq0MEVU8rNbNvU60umeKCrwYn6cEse6obu8c\n4/D6R2JQnfN4kZv3x7sKfeS9rExi2g8FO9cs1MmRe15J8Fs9cOHupNpeZBUh\nIoW6o2jOuanPbtHIkRE6BjoaYpafyUWCymxhkaR5nGqQoWk671xAlHkwZQSH\n11Lu\r\n=qHD3\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "LICENSE-MIT.txt",
    "rewrite-pattern.js",
    "data/character-class-escape-sets.js",
    "data/iu-mappings.js"
  ],
  "gitHead": "6f20f824ca2e36d491c3f66040efbbdd6b433c86",
  "homepage": "https://mths.be/regexpu",
  "keywords": [
    "codegen",
    "desugaring",
    "ecmascript",
    "es5",
    "es6",
    "harmony",
    "javascript",
    "refactoring",
    "regex",
    "regexp",
    "regular expressions",
    "rewriting",
    "syntax",
    "transformation",
    "transpile",
    "transpiler",
    "unicode"
  ],
  "license": "MIT",
  "main": "rewrite-pattern.js",
  "maintainers": [
    {
      "name": "mathias",
      "email": "mathias@qiwi.be"
    }
  ],
  "name": "regexpu-core",
  "optionalDependencies": {},
  "readme": "# regexpu-core [![Build status](https://travis-ci.org/mathiasbynens/regexpu-core.svg?branch=master)](https://travis-ci.org/mathiasbynens/regexpu-core) [![Code coverage status](https://img.shields.io/codecov/c/github/mathiasbynens/regexpu-core.svg)](https://codecov.io/gh/mathiasbynens/regexpu-core)\n\n_regexpu_ is a source code transpiler that enables the use of ES6 Unicode regular expressions in JavaScript-of-today (ES5).\n\n_regexpu-core_ contains _regexpu_’s core functionality, i.e. `rewritePattern(pattern, flag)`, which enables rewriting regular expressions that make use of [the ES6 `u` flag](https://mathiasbynens.be/notes/es6-unicode-regex) into equivalent ES5-compatible regular expression patterns.\n\n## Installation\n\nTo use _regexpu-core_ programmatically, install it as a dependency via [npm](https://www.npmjs.com/):\n\n```bash\nnpm install regexpu-core --save\n```\n\nThen, `require` it:\n\n```js\nconst rewritePattern = require('regexpu-core');\n```\n\n## API\n\nThis module exports a single function named `rewritePattern`.\n\n### `rewritePattern(pattern, flags, options)`\n\nThis function takes a string that represents a regular expression pattern as well as a string representing its flags, and returns an ES5-compatible version of the pattern.\n\n```js\nrewritePattern('foo.bar', 'u');\n// → 'foo(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uDC00-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF])bar'\n\nrewritePattern('[\\\\u{1D306}-\\\\u{1D308}a-z]', 'u');\n// → '(?:[a-z]|\\\\uD834[\\\\uDF06-\\\\uDF08])'\n\nrewritePattern('[\\\\u{1D306}-\\\\u{1D308}a-z]', 'ui');\n// → '(?:[a-z\\\\u017F\\\\u212A]|\\\\uD834[\\\\uDF06-\\\\uDF08])'\n```\n\n_regexpu-core_ can rewrite non-ES6 regular expressions too, which is useful to demonstrate how their behavior changes once the `u` and `i` flags are added:\n\n```js\n// In ES5, the dot operator only matches BMP symbols:\nrewritePattern('foo.bar');\n// → 'foo(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uFFFF])bar'\n\n// But with the ES6 `u` flag, it matches astral symbols too:\nrewritePattern('foo.bar', 'u');\n// → 'foo(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uDC00-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF])bar'\n```\n\nThe optional `options` argument recognizes the following properties:\n\n#### `dotAllFlag` (default: `false`)\n\nSetting this option to `true` enables support for [the `s` (`dotAll`) flag](https://github.com/mathiasbynens/es-regexp-dotall-flag).\n\n```js\nrewritePattern('.');\n// → '[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uFFFF]'\n\nrewritePattern('.', '', {\n  'dotAllFlag': true\n});\n// → '[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uFFFF]'\n\nrewritePattern('.', 's', {\n  'dotAllFlag': true\n});\n// → '[\\\\0-\\\\uFFFF]'\n\nrewritePattern('.', 'su', {\n  'dotAllFlag': true\n});\n// → '(?:[\\\\0-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF])'\n```\n\n#### `unicodePropertyEscape` (default: `false`)\n\nSetting this option to `true` enables [support for Unicode property escapes](property-escapes.md):\n\n```js\nrewritePattern('\\\\p{Script_Extensions=Anatolian_Hieroglyphs}', 'u', {\n  'unicodePropertyEscape': true\n});\n// → '(?:\\\\uD811[\\\\uDC00-\\\\uDE46])'\n```\n\n#### `lookbehind` (default: `false`)\n\nSetting this option to `true` enables support for [lookbehind assertions](https://github.com/tc39/proposal-regexp-lookbehind).\n\n```js\nrewritePattern('(?<=.)a', '', {\n  'lookbehind': true\n});\n// → '(?<=[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uFFFF])a'\n```\n\n#### `namedGroup` (default: `false`)\n\nSetting this option to `true` enables support for [named capture groups](https://github.com/tc39/proposal-regexp-named-groups).\n\n```js\nrewritePattern('(?<name>.)\\k<name>', '', {\n  'namedGroups': true\n});\n// → '(.)\\1'\n```\n\n#### `onNamedGroup`\n\nThis option is a function that gets called when a named capture group is found. It receives two parameters:\nthe name of the group, and its index.\n\n```js\nrewritePattern('(?<name>.)\\k<name>', '', {\n  'namedGroups': true,\n  onNamedGroup(name, index) {\n    console.log(name, index);\n    // → 'name', 1\n  }\n});\n```\n\n#### `useUnicodeFlag` (default: `false`)\n\nSetting this option to `true` enables the use of Unicode code point escapes of the form `\\u{…}`. Note that in regular expressions, such escape sequences only work correctly when the ES6 `u` flag is set. Enabling this setting often results in more compact output, although there are cases (such as `\\p{Lu}`) where it actually _increases_ the output size.\n\n```js\nrewritePattern('\\\\p{Script_Extensions=Anatolian_Hieroglyphs}', 'u', {\n  'unicodePropertyEscape': true,\n  'useUnicodeFlag': true\n});\n// → '[\\\\u{14400}-\\\\u{14646}]'\n```\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_regexpu-core_ is available under the [MIT](https://mths.be/mit) license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mathiasbynens/regexpu-core.git"
  },
  "scripts": {
    "build": "node scripts/iu-mappings.js && node scripts/character-class-escape-sets.js",
    "cover": "istanbul cover --report html node_modules/.bin/_mocha tests -- -u exports -R spec",
    "test": "mocha tests"
  },
  "version": "4.6.0"
}
