{
  "_args": [
    [
      {
        "raw": "sudo-prompt@^9.0.0",
        "scope": null,
        "escapedName": "sudo-prompt",
        "name": "sudo-prompt",
        "rawSpec": "^9.0.0",
        "spec": ">=9.0.0 <10.0.0",
        "type": "range"
      },
      "J:\\ReactNativeMovieApp\\RNMovieApp\\node_modules\\react-native\\node_modules\\@react-native-community\\cli"
    ]
  ],
  "_from": "sudo-prompt@^9.0.0",
  "_hasShrinkwrap": false,
  "_id": "sudo-prompt@9.1.1",
  "_location": "/sudo-prompt",
  "_nodeVersion": "11.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sudo-prompt_9.1.1_1573748539868_0.07151935628436212"
  },
  "_npmUser": {
    "name": "jorandirkgreef",
    "email": "joran@ronomon.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sudo-prompt@^9.0.0",
    "scope": null,
    "escapedName": "sudo-prompt",
    "name": "sudo-prompt",
    "rawSpec": "^9.0.0",
    "spec": ">=9.0.0 <10.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-native/@react-native-community/cli"
  ],
  "_resolved": "https://registry.npmjs.org/sudo-prompt/-/sudo-prompt-9.1.1.tgz",
  "_shasum": "73853d729770392caec029e2470db9c221754db0",
  "_shrinkwrap": null,
  "_spec": "sudo-prompt@^9.0.0",
  "_where": "J:\\ReactNativeMovieApp\\RNMovieApp\\node_modules\\react-native\\node_modules\\@react-native-community\\cli",
  "author": {
    "name": "Joran Dirk Greef"
  },
  "bugs": {
    "url": "https://github.com/jorangreef/sudo-prompt/issues"
  },
  "dependencies": {},
  "description": "Run a command using sudo, prompting the user with an OS dialog if necessary",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-es33J1g2HjMpyAhz8lOR+ICmXXAqTuKbuXuUWLhOLew20oN9oUCgCJx615U/v7aioZg7IX5lIh9x34vwneu4pA==",
    "shasum": "73853d729770392caec029e2470db9c221754db0",
    "tarball": "https://registry.npmjs.org/sudo-prompt/-/sudo-prompt-9.1.1.tgz",
    "fileCount": 8,
    "unpackedSize": 45970,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdzX88CRA9TVsSAnZWagAAWbUP/ig0hqJGOOiHMmQZz0mK\nej2TlcYh9HlFB4uvRaTmvrkiXXaClXvwedPgYUVtwuLdkU0JAXA5mnjoQtVJ\nXZNewXKKwSKJHK2u2gjZVxtluO1PEF5VyVA7NmeL6lXXYD0s8lPn92BGQvs2\nVSUKQlRxgrWjIbN9faXfBJR5TTxFIkpZvSbHI5kY+OQe/dsnXp12V3DUvrlT\n5HRW3/p3/ef+r99y4abFPZVDDm6NWoK1dthD1BdeymqGVccJRQHwCoy8Pfqy\npfH6yNxWTsNLm3V2seC+Gp0w9TLYMYxSTb9RUY/26myQEMgeWUg9xtO0rB2/\nji/2mW3r7pRT5j3v/Rlfq0vaicMHdZckK0Wm1tV+hjK4KSw+OudAr8eb+C0M\nQ1egT8wO+WBP6RKX5oSWS4OVz+6umnkqTpdj4m2DGtEGefyvRhKaSCznX0SY\nTl8FJzCpSwDddNYn725oGJnxVlNHcEF1mzl08lLufUQDTVxuWhdqHqq80zhB\ntI/KC9pSl/s8mriqVZHUyLpRCiXEkXWG/PhFWzXKQ0WGl8B0iCOn6RO1otpt\neoeEWUvhJgKEpcLOE17xF7QAkJ60A3dQf+RKXWxmROPb1SGaglmx0iFff39x\nQrp+OlSjPmuTKh6CTYF/TjrugodBks+0J7omCyCs1O1BY4QFPPX/5oCdY0ma\n0m2u\r\n=R/Kc\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "LICENSE",
    "README.md",
    "index.d.ts",
    "index.js",
    "package.json",
    "test.js",
    "test-concurrent.js"
  ],
  "gitHead": "e176896428b5742207f1607743422c6ef1fe3754",
  "homepage": "https://github.com/jorangreef/sudo-prompt#readme",
  "keywords": [
    "sudo",
    "os",
    "dialog",
    "prompt",
    "command",
    "exec",
    "user access control",
    "UAC",
    "privileges",
    "administrative",
    "elevate",
    "run as administrator"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jorandirkgreef",
      "email": "joran@ronomon.com"
    }
  ],
  "name": "sudo-prompt",
  "optionalDependencies": {},
  "readme": "# sudo-prompt\n\nRun a non-graphical terminal command using `sudo`, prompting the user with a graphical OS dialog if necessary. Useful for background Node.js applications or native Electron apps that need `sudo`.\n\n## Cross-Platform\n`sudo-prompt` provides a native OS dialog prompt on **macOS**, **Linux** and **Windows**.\n\n![macOS](https://raw.githubusercontent.com/jorangreef/sudo-prompt/master/macos.png)\n\n![Linux](https://raw.githubusercontent.com/jorangreef/sudo-prompt/master/linux.png)\n\n![Windows](https://raw.githubusercontent.com/jorangreef/sudo-prompt/master/windows.png)\n\n## Installation\n`sudo-prompt` has no external dependencies and does not require any native bindings.\n```\nnpm install sudo-prompt\n```\n\n## Usage\nNote: Your command should not start with the `sudo` prefix.\n```javascript\nvar sudo = require('sudo-prompt');\nvar options = {\n  name: 'Electron',\n  icns: '/Applications/Electron.app/Contents/Resources/Electron.icns', // (optional)\n};\nsudo.exec('echo hello', options,\n  function(error, stdout, stderr) {\n    if (error) throw error;\n    console.log('stdout: ' + stdout);\n  }\n);\n```\n\n`sudo-prompt` will use `process.title` as `options.name` if `options.name` is not provided. `options.name` must be alphanumeric only (spaces are supported) and at most 70 characters.\n\n`sudo-prompt` will preserve the current working directory on all platforms. Environment variables can be set explicitly using `options.env`.\n\n**`sudo-prompt.exec()` is different to `child-process.exec()` in that no child process is returned (due to platform and permissions constraints).**\n\n## Behavior\nOn macOS, `sudo-prompt` should behave just like the `sudo` command in the shell. If your command does not work with the `sudo` command in the shell (perhaps because it uses `>` redirection to a restricted file), then it may not work with `sudo-prompt`. However, it is still possible to use sudo-prompt to get a privileged shell, [see this closed issue for more information](https://github.com/jorangreef/sudo-prompt/issues/1).\n\nOn Linux, `sudo-prompt` will use either `pkexec` or `kdesudo` to show the password prompt and run your command. Where possible, `sudo-prompt` will try and get these to mimic `sudo`. Depending on which binary is used, and due to the limitations of some binaries, the name of your program or the command itself may be displayed to your user. `sudo-prompt` will not use `gksudo` since `gksudo` does not support concurrent prompts. Passing `options.icns` is currently not supported by `sudo-prompt` on Linux. Patches are welcome to add support for icons based on `polkit`.\n\nOn Windows, `sudo-prompt` will elevate your command using User Account Control (UAC). Passing `options.name` or `options.icns` is currently not supported by `sudo-prompt` on Windows.\n\n## Non-graphical terminal commands only\nJust as you should never use `sudo` to launch any graphical applications, you should never use `sudo-prompt` to launch any graphical applications. Doing so could cause files in your home directory to become owned by root. `sudo-prompt` is explicitly designed to launch non-graphical terminal commands. For more information, [read this post](http://www.psychocats.net/ubuntu/graphicalsudo).\n\n## Concurrency\nOn systems where the user has opted to have `tty-tickets` enabled (most systems), each call to `exec()` will result in a separate password prompt. Where `tty-tickets` are disabled, subsequent calls to `exec()` will still require a password prompt, even where the user's `sudo` timestamp file remains valid, due to edge cases with `sudo` itself, [see this discussion for more information](https://github.com/jorangreef/sudo-prompt/pull/76).\n\nYou should never rely on `sudo-prompt` to execute your calls in order. If you need to enforce ordering of calls, then you should explicitly order your calls in your application. Where your commands are short-lived, you should always queue your calls to `exec()` to make sure your user is not overloaded with password prompts.\n\n## Invalidating the timestamp\nOn macOS and Linux, you can invalidate the user's `sudo` timestamp file to force the prompt to appear by running the following command in your terminal:\n\n```sh\n$ sudo -k\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jorangreef/sudo-prompt.git"
  },
  "scripts": {},
  "types": "index.d.ts",
  "version": "9.1.1"
}
