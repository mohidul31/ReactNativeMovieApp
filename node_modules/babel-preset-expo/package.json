{
  "_args": [
    [
      {
        "raw": "babel-preset-expo@~8.0.0",
        "scope": null,
        "escapedName": "babel-preset-expo",
        "name": "babel-preset-expo",
        "rawSpec": "~8.0.0",
        "spec": ">=8.0.0 <8.1.0",
        "type": "range"
      },
      "J:\\ReactNativeMovieApp\\RNMovieApp\\node_modules\\expo"
    ]
  ],
  "_from": "babel-preset-expo@~8.0.0",
  "_hasShrinkwrap": false,
  "_id": "babel-preset-expo@8.0.0",
  "_location": "/babel-preset-expo",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/babel-preset-expo_8.0.0_1575286391473_0.10822338047354263"
  },
  "_npmUser": {
    "name": "tsapeta",
    "email": "sapeta.tomasz@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-preset-expo@~8.0.0",
    "scope": null,
    "escapedName": "babel-preset-expo",
    "name": "babel-preset-expo",
    "rawSpec": "~8.0.0",
    "spec": ">=8.0.0 <8.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/",
    "/expo"
  ],
  "_resolved": "https://registry.npmjs.org/babel-preset-expo/-/babel-preset-expo-8.0.0.tgz",
  "_shasum": "08c042363189f2d871381f0d0dbf9644e9f67aea",
  "_shrinkwrap": null,
  "_spec": "babel-preset-expo@~8.0.0",
  "_where": "J:\\ReactNativeMovieApp\\RNMovieApp\\node_modules\\expo",
  "author": {
    "name": "Expo",
    "email": "support@expo.io"
  },
  "bugs": {
    "url": "https://github.com/expo/expo/issues"
  },
  "dependencies": {
    "@babel/plugin-proposal-decorators": "^7.6.0",
    "@babel/preset-env": "^7.6.3",
    "babel-plugin-module-resolver": "^3.2.0",
    "babel-plugin-react-native-web": "^0.11.7",
    "metro-react-native-babel-preset": "^0.56.0"
  },
  "description": "The Babel preset for Expo projects",
  "devDependencies": {
    "@babel/core": "^7.6.4",
    "jest": "^24.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "08c042363189f2d871381f0d0dbf9644e9f67aea",
    "integrity": "sha512-40UCIE4E+9Xx5K+oEidFHML2+j/WE/ikcC7+3ndWx74MtdmRAtnGecboKRiGUK/vMrHzXIcWPP6/SOnE7zQVgQ==",
    "tarball": "https://registry.npmjs.org/babel-preset-expo/-/babel-preset-expo-8.0.0.tgz",
    "fileCount": 4,
    "unpackedSize": 7552,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd5PZ4CRA9TVsSAnZWagAAHdgQAIbCBm6xORCZ4lVnqkEu\ndue4xJLJ6A9Sv3PdgRg3tker9+WmO1hVcaLsMCOcUbR2YNA2oqsAWNY84NW7\nVplC3LUa7v+ynKnAqzMLnWmMwa5PEa12a8AKrqY8Ukb6G2UojwIQbAep3eyl\nEi0MHaR0IcyYmM+kE31jLvc564zTKJSjOmr/70pcnQ+NDltsqfarB6zWtSpE\nE5SGVYicyATPKYPfbo9UROjfOulFbaTzJgsXNwjyqAomhA1Dcwno8irGPFj2\nirmWVqYGgE9gSFEia1T34rbVHlEgIqresKD6VzcU0ABwNXgfwRJ50ka+mTjd\n9nUc2HY/BQZhbSY7HEYhhpW9IbjsOtm+/iY8Bl82wxlxWUuS+bKdjHJfKB7v\n3rdHuajxfHcO9vLyKlN2CXzJCng6mhyjMmquDcbnUmkyuEAy4t7DNBBxuWYu\nH8quibSGLShXkZg+ENxVCkAjdsyR9t6cDQwHH0EVcf/5uc58an67bYWQR3F/\nvZX9nQit8J2LKeNa+SbRdrlvc+TTp8jbxf4WGd7glyoW2k+GcaMrSxGVkR7Y\n6p83h5YvfiZtdXAX80KMPXAdCuhyEq/8nd66+GSeYUIBtjbXHwu4srlhpxj5\nCyqjaWoDcSG9Q9XEYcbVueozHvfzOcXSF0CVzOh1c4Aqrd9SNOpqTij1D4Pl\ndotn\r\n=b/aC\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "eslintConfig": {
    "extends": "universe/node"
  },
  "files": [
    "index.js",
    "lazy-imports-blacklist.js"
  ],
  "gitHead": "bd8343719d83600fe938913173eefb0bb6a8bf60",
  "homepage": "https://github.com/expo/expo/tree/master/packages/babel-preset-expo#readme",
  "jest": {
    "testEnvironment": "node",
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/__tests__/samples/"
    ]
  },
  "keywords": [
    "babel",
    "babel-preset",
    "expo",
    "expo-web",
    "react-native",
    "react-native-web",
    "metro",
    "webpack"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bbarthec",
      "email": "bartlomiejbukowski.b@gmail.com"
    },
    {
      "name": "brentvatne",
      "email": "brentvatne@gmail.com"
    },
    {
      "name": "ccheever",
      "email": "ccheever@gmail.com"
    },
    {
      "name": "charliecruzan",
      "email": "charliecruzan@gmail.com"
    },
    {
      "name": "dsokal",
      "email": "dominiksokal@gmail.com"
    },
    {
      "name": "esamelson",
      "email": "eric@expo.io"
    },
    {
      "name": "evanbacon",
      "email": "baconbrix@gmail.com"
    },
    {
      "name": "expoadmin",
      "email": "support@expo.io"
    },
    {
      "name": "exponent",
      "email": "exponent.team@gmail.com"
    },
    {
      "name": "fson",
      "email": "ville.immonen@iki.fi"
    },
    {
      "name": "ide",
      "email": "ide+npm@jameside.com"
    },
    {
      "name": "mczernek",
      "email": "czernekmichal@gmail.com"
    },
    {
      "name": "quinlanj",
      "email": "quinlanjung@gmail.com"
    },
    {
      "name": "sjchmiela",
      "email": "sjchmiela@gmail.com"
    },
    {
      "name": "szymon20000",
      "email": "szymon.kapala@swmansion.com"
    },
    {
      "name": "tcdavis",
      "email": "tc@expo.io"
    },
    {
      "name": "tsapeta",
      "email": "sapeta.tomasz@gmail.com"
    },
    {
      "name": "wkozyra",
      "email": "wojciech.kozyra@swmansion.com"
    },
    {
      "name": "wolewicki",
      "email": "wojciech.lewicki@swmansion.com"
    }
  ],
  "name": "babel-preset-expo",
  "optionalDependencies": {},
  "readme": "# babel-preset-expo\n\nThis preset extends the default React Native preset (`metro-react-native-babel-preset`) and adds support for decorators, tree-shaking web packages, and loading font icons with optional native dependencies if they're installed.\n\nYou can use this preset in any React Native project as a drop-in replacement for `metro-react-native-babel-preset`. If your project isn't using native font loading or web support then this preset will only add support for decorators with `@babel/plugin-proposal-decorators` - this is mostly used for supporting legacy community libraries.\n\nIf you start your **web** project with `@expo/webpack-config` or `expo start:web` and your project doesn't contain a `babel.config.js` or a `.babelrc` then it will default to using `babel-preset-expo` for loading.\n\nIf you have problems with the code in this repository, please file issues & bug reports\nat https://github.com/expo/expo. Thanks!\n\n## Options\n\n### [`lazyImports`](https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#lazy)\n\nChanges Babel's compiled `import` statements to be lazily evaluated when their imported bindings are used for the first time.\n\n_Note:_ this option has an effect only when the `disableImportExportTransform` option is set to `false`. On Android and iOS, `disableImportExportTransform` defaults to `false`, and on web it defaults to `true` to allow for tree shaking.\n\nThis can improve the initial load time of your app because evaluating dependencies up front is sometimes entirely un-necessary, particularly when the dependencies have no side effects.\n\nThe value of `lazyImports` has a few possible effects:\n\n- `null` - [metro-react-native-babel-preset](https://github.com/facebook/metro/tree/master/packages/metro-react-native-babel-preset) will handle it. (Learn more about it here: https://github.com/facebook/metro/commit/23e3503dde5f914f3e642ef214f508d0a699851d)\n\n- `false` - No lazy initialization of any imported module.\n\n- `true` - Lazy-init all imported modules except local imports (e.g., `./foo`), certain Expo packages that have side effects, and the two cases mentioned [here](https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#lazy).\n\n- `Array<string>` - [babel-plugin-transform-modules-commonjs](https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#lazy) will handle it.\n\n- `(string) => boolean` - [babel-plugin-transform-modules-commonjs](https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#lazy) will handle it.\n\n  If you choose to do this, you can also access the list of Expo packages that have side effects by using `const lazyImportsBlacklist = require('babel-preset-expo/lazy-imports-blacklist');` which returns a `Set`.\n\n**default:** `null`\n\n```js\n[\n    'babel-preset-expo',\n    {\n        lazyImports: true\n    }\n],\n```\n\n### `web.disableImportExportTransform`\n\nEnabling this option will allow your project to run with older JavaScript syntax (i.e. `module.exports`). This option will break tree shaking and increase your bundle size, but will eliminate the following error when `module.exports` is used:\n\n> `TypeError: Cannot assign to read only property 'exports' of object '#<Object>'`\n\n**default:** `false`\n\n```js\n[\n    'babel-preset-expo',\n    {\n        web: { disableImportExportTransform: true }\n    }\n],\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/expo/expo.git",
    "directory": "packages/babel-preset-expo"
  },
  "scripts": {
    "jest": "jest",
    "lint": "eslint .",
    "test": "jest --watch"
  },
  "version": "8.0.0"
}
